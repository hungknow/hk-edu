// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetV1CoursesData, GetV1CoursesResponses, PostV1CoursesData, PostV1CoursesResponses, GetV1CoursesByCourseIdData, GetV1CoursesByCourseIdResponses, GetV1CoursesByCourseIdLessonsData, GetV1CoursesByCourseIdLessonsResponses, PostV1CoursesParticipantsData, PostV1CoursesParticipantsResponses, GetV1CourseByCourseIdPricingData, GetV1CourseByCourseIdPricingResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Get the list of available courses
 */
export const getV1Courses = <ThrowOnError extends boolean = false>(options?: Options<GetV1CoursesData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetV1CoursesResponses, unknown, ThrowOnError>({
        url: '/v1/courses',
        ...options
    });
};

/**
 * Search the courses
 */
export const postV1Courses = <ThrowOnError extends boolean = false>(options: Options<PostV1CoursesData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1CoursesResponses, unknown, ThrowOnError>({
        url: '/v1/courses',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Get the detail of a specific course by its ID
 */
export const getV1CoursesByCourseId = <ThrowOnError extends boolean = false>(options: Options<GetV1CoursesByCourseIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1CoursesByCourseIdResponses, unknown, ThrowOnError>({
        url: '/v1/courses/{course_id}',
        ...options
    });
};

/**
 * Return list of lessons of a specific course
 */
export const getV1CoursesByCourseIdLessons = <ThrowOnError extends boolean = false>(options: Options<GetV1CoursesByCourseIdLessonsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1CoursesByCourseIdLessonsResponses, unknown, ThrowOnError>({
        url: '/v1/courses/{course_id}/lessons',
        ...options
    });
};

/**
 * Enroll a user in a course
 */
export const postV1CoursesParticipants = <ThrowOnError extends boolean = false>(options: Options<PostV1CoursesParticipantsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostV1CoursesParticipantsResponses, unknown, ThrowOnError>({
        url: '/v1/courses/participants',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Returns the pricing of the course.
 */
export const getV1CourseByCourseIdPricing = <ThrowOnError extends boolean = false>(options: Options<GetV1CourseByCourseIdPricingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetV1CourseByCourseIdPricingResponses, unknown, ThrowOnError>({
        url: '/v1/course/{courseID}/pricing',
        ...options
    });
};